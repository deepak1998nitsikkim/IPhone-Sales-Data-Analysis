# -*- coding: utf-8 -*-
"""iphone sales analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o5JDbB9WjFD-aGQK5aNeg6C376CgCZzO
"""

import pandas as pd
import numpy as np
import plotly.express as px

data = pd.read_csv('apple.csv')

data.info()

data

first10 = data.head(10)
first10

last10 = data.tail(10)
last10

notnulldata = data.isnull().sum()
notnulldata

data.describe()

dr = data.sort_values(by='Star Rating', ascending=False).head(5)
dr

product_rating_name = dr[['Product Name','Star Rating']]
product_rating_name

product_rating = product_rating_name['Product Name']
product_rating

product_rating_count = product_rating_name['Product Name'].value_counts()
product_rating_count

label = product_rating_count.index
counts = dr['Number Of Ratings']
fig = px.bar(dr,x=label,y=counts,title='Number Of Ratings')
fig.show()

label = product_rating_count.index
counts = dr['Number Of Reviews']
fig = px.bar(dr,x=label,y=counts,title='Number Of Reviews')
fig.show()

# Iphone Sale Price and Rating Relationship
fg = px.scatter(data_frame=data, x='Number Of Ratings', y='Sale Price', size='Discount Percentage', trendline='ols',title='Sale Price VS Rating')
fg.show()

# Iphone Discount Percentage and Rating Relationship
fg = px.scatter(data_frame=data, x='Number Of Ratings', y='Discount Percentage', size='Sale Price', trendline='ols',title='Discount Percentage VS Rating')
fg.show()

#Most Expensive and Least Expensive Iphone
product_sale_price = data[['Product Name','Sale Price']]
product_sale_price

sale_price = product_sale_price['Sale Price']
sale_price

least_expensive = data.loc[data['Sale Price'].idxmin()]
most_expensive = data.loc[data['Sale Price'].idxmax()]

least_expensive

most_expensive